{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totus Tuus Maria\\\\Desktop\\\\Cursadas SHY\\\\aCURSADA_2\\\\M2 Repo\\\\FT-M2-master\\\\06-React-Intro\\\\homework\\\\02 - Integration\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport './App.css';\nimport Card from './components/card/Card.jsx';\nimport Cards from './components/cards/Cards.jsx';\nimport SearchBar from './components/searchbar/SearchBar.jsx';\nimport NavBar from './components/navBar/navBar.jsx';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\n//useLocation() es para saber donde estoy parado URL. [.pathname]\n//useNavigate para redirigirme a otra url\n//useEffect es para q al momento de cargar la pagina verifique si tengo o no acceso\nimport { createRoot } from 'react-dom/client';\nimport About from './views/about.jsx';\nimport Detail from './views/detail.jsx';\nimport LoginForm from './components/loginForm/loginForm.jsx';\n\n// const example = {\n//    id: 1,\n//    name: 'Rick Sanchez',\n//    status: 'Alive',\n//    species: 'Human',\n//    gender: 'Male',\n//    origin: {\n//       name: 'Earth (C-137)',\n//       url: 'https://rickandmortyapi.com/api/location/1',\n//    },\n//    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [characters, setCharacters] = useState([]); // creamos el estado\n  //console.log('24 App' )\n  //console.log(characters)\n\n  //PTO 5 SEGURIDAD \n  const navigate = useNavigate();\n  const [access, setAccess] = useState(false); // si el estado es false no ingresará\n  const EMAIL = 'v@gmail.com';\n  const PASSWORD = '1password';\n  function login(userData) {\n    _s();\n    // userData me llega x el formulario\n    if (userData.password === PASSWORD && userData.email === EMAIL) {\n      setAccess(true);\n      navigate('/home');\n    }\n\n    //useEffect es para q al momento de montaje de la pagina, yo verifique si tengo o no acceso\n    // al ppio tengo access seteado en false\n    // cada vez q el acceso de mi pagina cambie vuelvo a ejecutar la fc\n\n    useEffect(() => {\n      !access && navigate('/');\n    }, [access]);\n  }\n\n  //PTO 2: renderiz condicional de la NavBar en fc de si estoy parado en la / o no\n  _s(login, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  const location = useLocation(); // devuelve obj {pathname: , }\n\n  function searchHandler(id) {\n    //setCharacters([...characters, example]);\n\n    //esta fc me cambiará el estado (q se llama characters): lo q en este caso, como\n    //characters es un [] me lo modifica, con spread operator, agregandome\n    //un nuevo elemento (un {})\n    // Tendré lo q tenia en  los estados previos y\n    // agregará uno nuevo\n    //console.log('30 App se ejecutó en Card' + characters)\n\n    axios(`https://rickandmortyapi.com/api/character/${id}`).then(({\n      data\n    }) => {\n      if (data.name) {\n        setCharacters([...characters, data]); // igual poner setCharacters((oldChars) => [...oldchars, data]);\n      } else {\n        window.alert('¡No hay personajes con este ID!');\n      }\n    });\n  }\n  function closeHandler(id) {\n    //aqui llega el id q quiero eliminar\n    window.alert(id);\n    //console.log(characters)\n    let deleted = characters.filter(character => character.id !== Number(id)); // filter me devuelve el array con elems q cumplan la condic\n    setCharacters(deleted);\n    //console.log(deleted)\n  }\n\n  return (\n    /*#__PURE__*/\n    // en Rote le digo q elemento renderizar en esa url\n    // le envio a mi formulario la prop login con la fc login\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [location.pathname !== \"/\" && /*#__PURE__*/_jsxDEV(NavBar, {\n        onSearch: searchHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Cards, {\n            characters: characters,\n            onClose: closeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/detail/:id\",\n          element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 22\n          }, this),\n          children: [\"login=\", login]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  );\n}\n_s2(App, \"URscCVy/E4aEZ1YqNYxLtPRWR4A=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Card","Cards","SearchBar","NavBar","useState","useEffect","axios","Route","Routes","useLocation","useNavigate","createRoot","About","Detail","LoginForm","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","characters","setCharacters","navigate","access","setAccess","EMAIL","PASSWORD","login","userData","password","email","location","searchHandler","id","then","data","name","window","alert","closeHandler","deleted","filter","character","Number","className","children","pathname","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Totus Tuus Maria/Desktop/Cursadas SHY/aCURSADA_2/M2 Repo/FT-M2-master/06-React-Intro/homework/02 - Integration/src/App.js"],"sourcesContent":["import './App.css';\nimport Card from './components/card/Card.jsx';\nimport Cards from './components/cards/Cards.jsx';\nimport SearchBar from './components/searchbar/SearchBar.jsx';\nimport NavBar from './components/navBar/navBar.jsx';\nimport {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {Route, Routes, useLocation, useNavigate} from \"react-router-dom\"; \n//useLocation() es para saber donde estoy parado URL. [.pathname]\n//useNavigate para redirigirme a otra url\n//useEffect es para q al momento de cargar la pagina verifique si tengo o no acceso\nimport { createRoot } from 'react-dom/client';\nimport About from './views/about.jsx';\nimport Detail from './views/detail.jsx';\nimport LoginForm from './components/loginForm/loginForm.jsx';\n\n// const example = {\n//    id: 1,\n//    name: 'Rick Sanchez',\n//    status: 'Alive',\n//    species: 'Human',\n//    gender: 'Male',\n//    origin: {\n//       name: 'Earth (C-137)',\n//       url: 'https://rickandmortyapi.com/api/location/1',\n//    },\n//    image: 'https://rickandmortyapi.com/api/character/avatar/1.jpeg',\n// };\n\nfunction App() {\n\n   const [characters, setCharacters] = useState([]); // creamos el estado\n   //console.log('24 App' )\n   //console.log(characters)\n\n   //PTO 5 SEGURIDAD \n   const navigate = useNavigate();\n   const [access, setAccess] = useState(false); // si el estado es false no ingresará\n   const EMAIL = 'v@gmail.com';\n   const PASSWORD = '1password';\n\nfunction login(userData) { // userData me llega x el formulario\n   if (userData.password === PASSWORD && userData.email === EMAIL) {\n      setAccess(true);\n      navigate('/home');\n   }\n\n//useEffect es para q al momento de montaje de la pagina, yo verifique si tengo o no acceso\n// al ppio tengo access seteado en false\n// cada vez q el acceso de mi pagina cambie vuelvo a ejecutar la fc\n\n   useEffect(() => {\n      !access && navigate('/');\n   }, [access]);\n}\n\n   //PTO 2: renderiz condicional de la NavBar en fc de si estoy parado en la / o no\n   const location = useLocation(); // devuelve obj {pathname: , }\n\n   function searchHandler(id){\n      //setCharacters([...characters, example]);\n\n      //esta fc me cambiará el estado (q se llama characters): lo q en este caso, como\n      //characters es un [] me lo modifica, con spread operator, agregandome\n      //un nuevo elemento (un {})\n      // Tendré lo q tenia en  los estados previos y\n      // agregará uno nuevo\n      //console.log('30 App se ejecutó en Card' + characters)\n\n      axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n      if (data.name) {\n         setCharacters([...characters, data]); // igual poner setCharacters((oldChars) => [...oldchars, data]);\n      } else {\n         window.alert('¡No hay personajes con este ID!');\n      }\n   });\n\n   }\n\n   function closeHandler(id){ //aqui llega el id q quiero eliminar\n      window.alert(id)\n      //console.log(characters)\n      let deleted = characters.filter(character => character.id !== Number(id)); // filter me devuelve el array con elems q cumplan la condic\n      setCharacters(deleted);\n      //console.log(deleted)\n   }\n   return ( // en Rote le digo q elemento renderizar en esa url\n   // le envio a mi formulario la prop login con la fc login\n      <div className='App'>\n         {location.pathname !== \"/\" && <NavBar onSearch={searchHandler}/>}\n        \n         <Routes>\n            <Route \n            path=\"/home\" \n            element={<Cards characters={characters} onClose={closeHandler}/>}>               \n            </Route>\n\n            <Route \n            path=\"/about\" \n            element={<About/>}>               \n            </Route>\n\n            <Route \n            path=\"/detail/:id\" \n            element={<Detail/>}>\n            </Route>\n\n            <Route\n            path=\"/\"\n            element={<LoginForm/>}>\n            login={login}\n            </Route>\n         </Routes>\n         \n      </div>\n   );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}