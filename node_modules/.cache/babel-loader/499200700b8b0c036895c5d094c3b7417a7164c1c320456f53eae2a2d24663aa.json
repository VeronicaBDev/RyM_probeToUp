{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Totus Tuus Maria\\\\Desktop\\\\Cursadas SHY\\\\aCURSADA_2\\\\M2 Repo\\\\FT-M2-master\\\\06-React-Intro\\\\homework\\\\02 - Integration\\\\src\\\\components\\\\searchbar\\\\SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBar(props) {\n  _s();\n  const {\n    onSearch\n  } = props;\n  const [id, setId] = useState(\"\"); // creamos el estado local\n  console.log('4 de SearchBar');\n  console.log(id);\n  function changeHandler(e) {\n    //evento ingreso un char al input\n    e.preventDefault();\n    console.log('e');\n    console.log(e.target);\n    let newId = e.target.value;\n    console.log(newId);\n    setId(newId);\n    //setCharacters([...characters, example]); \n    //esta fc me cambiará el estado (q se llama characters): lo q en este caso, como \n    //characters es un [] me lo modifica, con spread operator, agregandome\n    //un nuevo elemento (un {})\n    // Tendré lo q tenia en  los estados previos y \n    // agregará uno nuevo\n    console.log('15 SearchBar agregó un Id');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      onChange: changeHandler,\n      value: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSearch(id),\n      children: \"Agregar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n}\n_s(SearchBar, \"4S2lHYDXZu1kPqeM+OaM1T6vczM=\");\n_c = SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","SearchBar","props","_s","onSearch","id","setId","console","log","changeHandler","e","preventDefault","target","newId","value","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Totus Tuus Maria/Desktop/Cursadas SHY/aCURSADA_2/M2 Repo/FT-M2-master/06-React-Intro/homework/02 - Integration/src/components/searchbar/SearchBar.jsx"],"sourcesContent":["import {useState} from \"react\";\nexport default function SearchBar(props) {\n   const {onSearch} = props;\n   \n   const [id, setId] = useState(\"\"); // creamos el estado local\n   console.log('4 de SearchBar' )\n   console.log(id)\n   \n   function changeHandler(e){ //evento ingreso un char al input\n      e.preventDefault();\n      console.log('e');\n      console.log(e.target);\n      let newId = e.target.value;\n      console.log(newId);\n\n      setId(newId); \n      //setCharacters([...characters, example]); \n      //esta fc me cambiará el estado (q se llama characters): lo q en este caso, como \n      //characters es un [] me lo modifica, con spread operator, agregandome\n      //un nuevo elemento (un {})\n      // Tendré lo q tenia en  los estados previos y \n      // agregará uno nuevo\n      console.log('15 SearchBar agregó un Id')\n     \n   }\n\n\n   return (\n      <div>         \n         <input type='search' onChange={changeHandler} value={id} />\n         <button onClick={()=> onSearch(id)}>Agregar</button>\n      </div>\n   \n   );\n}\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/B,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM;IAACC;EAAQ,CAAC,GAAGF,KAAK;EAExB,MAAM,CAACG,EAAE,EAAEC,KAAK,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClCS,OAAO,CAACC,GAAG,CAAC,gBAAiB,CAAC;EAC9BD,OAAO,CAACC,GAAG,CAACH,EAAE,CAAC;EAEf,SAASI,aAAaA,CAACC,CAAC,EAAC;IAAE;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAChBD,OAAO,CAACC,GAAG,CAACE,CAAC,CAACE,MAAM,CAAC;IACrB,IAAIC,KAAK,GAAGH,CAAC,CAACE,MAAM,CAACE,KAAK;IAC1BP,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;IAElBP,KAAK,CAACO,KAAK,CAAC;IACZ;IACA;IACA;IACA;IACA;IACA;IACAN,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAE3C;EAGA,oBACGR,OAAA;IAAAe,QAAA,gBACGf,OAAA;MAAOgB,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAER,aAAc;MAACK,KAAK,EAAET;IAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3DrB,OAAA;MAAQsB,OAAO,EAAEA,CAAA,KAAKlB,QAAQ,CAACC,EAAE,CAAE;MAAAU,QAAA,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAGZ;AAAClB,EAAA,CAjCuBF,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}